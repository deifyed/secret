#!/usr/bin/env python3
##################################################
# Requirements: lpass-cli
# Remember to set the CLIPBOARD_SINK to something
# that works with your system. xclip is often used
# in linux, pbcopy for mac, etc.
##################################################
import argparse
import os
import subprocess
import sys
import time

from lib import password as pmgr

GPG_KEY_LPASS_NAME = 'GPG'  # The exact name of the lpass gpg key entry

CLIPBOARD_SINK = 'pbcopy'  # Program that reads from stdin and sets the clipboard
PASSWORD_TIMEOUT = 10  # Seconds before password gets removed from clipboard

parser = argparse.ArgumentParser()
parser.add_argument('--clear', '-c', action='store_true', help='clear decrypted files')
parser.add_argument('--decrypt', '-d', metavar='file.secret', help='encryptet file to decrypt')
parser.add_argument('--password', '-p', metavar='search string', help='fetch password from password manager')
parser.add_argument('--verbose', '-v', action='store_true', help='show stdout')

args = parser.parse_args()


def clearClipboard():
    pid = os.fork()
    if pid <= 0:
        time.sleep(PASSWORD_TIMEOUT)
        subprocess.run([CLIPBOARD_SINK], input='gone in the wind'.encode('utf-8'))
        sys.exit(0)


def copy(secret):
    subprocess.run([CLIPBOARD_SINK], input=secret.encode('utf-8'))
    clearClipboard()


fnull = None
run_options = dict()
if not args.verbose:
    fnull = open(os.devnull, 'w')

    run_options['stderr'] = subprocess.STDOUT
    run_options['stdout'] = fnull

if args.decrypt:
    output_destination = args.decrypt.rsplit('.', 1)[0]

    session_token = pmgr.getSessionToken()
    secret = pmgr.getPassword(session_token, GPG_KEY_LPASS_NAME)

    copy(secret)

    subprocess.run(['gpg', '--decrypt', '-o', output_destination, args.decrypt], **run_options)

if args.password:
    session_token = pmgr.getSessionToken()
    secret = pmgr.getPassword(session_token, args.password)

    copy(secret)

if fnull:
    fnull.close()
